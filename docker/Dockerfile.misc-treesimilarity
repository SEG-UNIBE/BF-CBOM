# docker/Dockerfile.misc-treesimilarity
# Dedicated container for the tree similarity worker that builds the
# native pybind11 extension linking against OR-Tools.

# Allow the target architecture to be overridden while defaulting to amd64.
FROM --platform=linux/amd64 ubuntu:24.04

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# System dependencies for building the extension and running the worker
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        cmake \
        git \
        curl \
        ca-certificates \
        tini \
        pkg-config \
        python3 \
        python3-pip \
        python3-venv \
        python3-dev \
        xz-utils \
        libeigen3-dev \
    && rm -rf /var/lib/apt/lists/*

# Python tooling (uv for consistency with other workers)
RUN python3 -m pip install --no-cache-dir uv --break-system-packages

# Create non-root user and workspace
RUN useradd -m appuser && mkdir -p /app && chown -R appuser:appuser /app
ENV PATH="/home/appuser/.local/bin:${PATH}"
USER appuser
WORKDIR /app

# Copy project manifests and shared code for dependency installation
COPY --chown=appuser:appuser pyproject.toml uv.lock README.md LICENSE ./
COPY --chown=appuser:appuser common/ ./common/

# Prepare virtual environment with project dependencies (without installing the root project)
RUN uv sync --frozen --no-dev --no-install-project

# Copy tree similarity sources
COPY --chown=appuser:appuser misc/treesimilartiy/ ./misc/treesimilartiy/

# Fetch required third-party dependencies into the expected external/ folder
RUN mkdir -p misc/treesimilartiy/external \
    && git clone --depth 1 https://gitlab.com/libeigen/eigen.git misc/treesimilartiy/external/eigen \
    && git clone --depth 1 https://github.com/DaveGamble/cJSON.git misc/treesimilartiy/external/cJSON \
    && git clone --depth 1 https://github.com/DatabaseGroup/tree-similarity.git misc/treesimilartiy/external/tree-similarity

# Download and unpack the official OR-Tools binary release (override ORTOOLS_URL if needed)
ARG ORTOOLS_URL="https://github.com/google/or-tools/releases/download/v9.12/or-tools_amd64_ubuntu-24.04_cpp_v9.12.4544.tar.gz"
USER root
RUN curl -#Lf "$ORTOOLS_URL" -o /tmp/or-tools.tar.gz \
    && mkdir -p /opt/or-tools \
    && tar -xzf /tmp/or-tools.tar.gz -C /opt/or-tools --strip-components=1 \
    && rm /tmp/or-tools.tar.gz
USER appuser
ENV LD_LIBRARY_PATH=/opt/or-tools/lib
ENV CMAKE_PREFIX_PATH=/opt/or-tools/lib/cmake

# Provide CMake with the OR-Tools config path
ENV ortools_DIR=/opt/or-tools/lib/cmake/ortools

# Build the native pybind11 extension
RUN cmake -S misc/treesimilartiy -B misc/treesimilartiy/build -DPython3_EXECUTABLE=$(which python3) -Dortools_DIR=${ortools_DIR} \
    && cmake --build misc/treesimilartiy/build --config Release

# Ensure the extension is importable
ENV PYTHONPATH=/app:/app/misc/treesimilartiy/build

ENTRYPOINT ["tini", "-g", "--", "uv", "run", "--no-dev", "python", "misc/treesimilartiy/src/main.py"]
